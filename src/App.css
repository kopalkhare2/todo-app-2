/* Animations */

/* Rainbow background animation */
@keyframes rainbowBackground {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Subtle dark gradient animation for dark mode */
@keyframes darkGradient {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Twinkle stars animation */
@keyframes twinkle {
  0%, 100% { opacity: 0.1; }
  50% { opacity: 0.3; }
}

/* Base styles */
body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  color: #fff;
  min-height: 100vh;
  transition: all 0.3s ease;
  position: relative;
  overflow-x: hidden;
}

/* Light Mode - Rainbow Animated Background */
body.light-mode {
  background: linear-gradient(270deg, #ff6ec4, #7873f5, #4ade80, #facc15, #f472b6);
  background-size: 1000% 1000%;
  animation: rainbowBackground 20s ease infinite;
  color: #111;
}

/* Dark Mode - Animated subtle gradient + twinkling stars */
body.dark-mode {
  background: linear-gradient(270deg, #121212, #1a1a1a, #121212);
  background-size: 400% 400%;
  animation: darkGradient 30s ease infinite;
  color: #e5e5e5;
  position: relative;
  overflow: hidden;
}

/* Twinkling stars overlay in dark mode */
body.dark-mode::before {
  content: "";
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  pointer-events: none;
  background: transparent url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="3" height="3"><circle cx="1.5" cy="1.5" r="1.5" fill="white" /></svg>') repeat;
  background-size: 50px 50px;
  animation: twinkle 5s infinite alternate ease-in-out;
  opacity: 0.1;
  z-index: 0;
}

/* App Container */
.app {
  max-width: 600px;
  margin: auto;
  padding: 2rem;
  background: rgba(0, 0, 0, 0.6);
  border-radius: 1rem;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.8);
  transition: background 0.3s ease;
  position: relative;
  z-index: 1;
}

/* Toggle Button */
button {
  background: #ffffff10;
  color: inherit;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 999px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.4s ease, box-shadow 0.4s ease, color 0.4s ease, transform 0.1s ease;
  user-select: none;
  outline-offset: 2px;
}
button:hover {
  background-color: #ffffff30;
  box-shadow: 0 0 10px #fff8;
}
button:active {
  transform: scale(0.97);
}

/* Header with animated gradient text */
h1 {
  text-align: center;
  margin-bottom: 1rem;
  background: linear-gradient(270deg, #ff6ec4, #7873f5, #4ade80, #facc15, #f472b6);
  background-size: 600% 600%;
  animation: rainbowBackground 20s ease infinite;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-size: 2rem;
  user-select: none;
}

/* Form */
form {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

input[type="text"], select {
  flex-grow: 1;
  padding: 0.6rem;
  border-radius: 0.5rem;
  border: none;
  outline: none;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Input backgrounds */
body.light-mode input,
body.light-mode select {
  background-color: #ffffffcc;
  color: #111;
}

body.dark-mode input,
body.dark-mode select {
  background-color: #2c2c2c;
  color: #eee;
}

/* Tasks */
.task {
  background: rgba(255, 255, 255, 0.1);
  border-left: 8px solid;
  padding: 0.75rem;
  border-radius: 0.5rem;
  margin-bottom: 0.75rem;
  display: flex;
  flex-direction: column;
  transition: background-color 0.3s ease, box-shadow 0.3s ease, color 0.3s ease, transform 0.2s ease;
  position: relative;
  cursor: default;
}
.task:hover {
  background: rgba(255, 255, 255, 0.15);
  box-shadow: 0 0 10px rgba(255,255,255,0.2);
  transform: translateY(-2px);
}
.task.completed span {
  text-decoration: line-through;
  opacity: 0.7;
  color: #aaa;
  transition: color 0.3s ease, opacity 0.3s ease;
}

/* Priority-based borders with glowing effect in dark mode */
.task[data-priority="High"] {
  border-color: #ef4444;
}
body.dark-mode .task[data-priority="High"] {
  box-shadow: 0 0 8px #ef4444aa;
}

.task[data-priority="Medium"] {
  border-color: #f59e0b;
}
body.dark-mode .task[data-priority="Medium"] {
  box-shadow: 0 0 8px #f59e0baa;
}

.task[data-priority="Low"] {
  border-color: #10b981;
}
body.dark-mode .task[data-priority="Low"] {
  box-shadow: 0 0 8px #10b981aa;
}

/* Task actions */
.task-actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
  margin-top: 0.5rem;
}

/* Filters */
.filter-bar {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.filter-bar button {
  border-radius: 0.5rem;
  padding: 0.3rem 0.75rem;
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
  cursor: pointer;
  user-select: none;
}
.filter-bar button:hover {
  box-shadow: 0 0 8px #ffffff60;
}
.filter-bar button:active {
  transform: scale(0.95);
}

.filter-bar .active {
  background: #ffffff50;
}

/* Responsive */
@media (min-width: 600px) {
  .task {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
  .task-actions {
    margin-top: 0;
  }
}